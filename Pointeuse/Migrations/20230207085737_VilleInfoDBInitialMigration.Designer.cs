// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pointeuse.db_contexts;

#nullable disable

namespace Pointeuse.Migrations
{
    [DbContext(typeof(PointeuseContext))]
    [Migration("20230207085737_VilleInfoDBInitialMigration")]
    partial class VilleInfoDBInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Pointeuse.Entités.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("VilleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VilleId");

                    b.ToTable("PointsOfInsterest");
                });

            modelBuilder.Entity("Pointeuse.Entités.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("Pointeuse.Entités.PointOfInterest", b =>
                {
                    b.HasOne("Pointeuse.Entités.Ville", "Ville")
                        .WithMany("PointsOfInsterest")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ville");
                });

            modelBuilder.Entity("Pointeuse.Entités.Ville", b =>
                {
                    b.Navigation("PointsOfInsterest");
                });
#pragma warning restore 612, 618
        }
    }
}
